
https://github.com/rajkumarpamu/Servlets-AshokIT



public interface Filter

A filter is an object that performs filtering tasks on either the request to a resource (a servlet or static content), or on the response from a resource, or both.


FilterChain ->  invocation chain of a filtered request for a resource.
FilterConfig



<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
  version="4.0">


  <servlet>
    <servlet-name>ss</servlet-name>
    <servlet-class>in.ashokit.SecondServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>ss</servlet-name>
    <url-pattern>/ss</url-pattern>
  </servlet-mapping>

   <servlet>
    <servlet-name>ss</servlet-name>
    <servlet-class>in.ashokit.FirstServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>ss</servlet-name>
    <url-pattern>/fs</url-pattern>
  </servlet-mapping>

    <filter>
    <filter-name>ff</filter-name>
    <filter-class>in.ashokit.FirstFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>ff</filter-name>
    <url-pattern>/fs</url-pattern>
  </filter-mapping>


  <filter>
    <filter-name>ff</filter-name>
    <filter-class>in.ashokit.FirstFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>ff</filter-name>
    <url-pattern>/ss</url-pattern>
  </filter-mapping>



  package in.ashokit;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class FirstFilter  implements Filter {

  public FirstFilter() {
    System.out.println("FirstFilter object is craeted");
  }

  @Override
  public void doFilter(ServletRequest req, ServletResponse res, FilterChain filterChain)
      throws IOException, ServletException {
    
    PrintWriter writer = res.getWriter();
    writer.print("---Inside doFilter---start");
    
    filterChain.doFilter(req, res);
    
    writer.print("---Inside doFilter---end");

  }

}




</web-app>package in.ashokit;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class SecondServlet extends HttpServlet {

  public SecondServlet() {
    System.out.println("SecondServlet obj is created");
  }
  @Override
  public void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
    
    PrintWriter writer = res.getWriter();
    writer.print("SecondServlet service method is invoked");
  }

}


static void registerDriver(Driver driver)
Registers the given driver with the DriverManager.


static Connection getConnection(String url, String user, String password)
Attempts to establish a connection to the given database URL.



<form action="/Servlet-Demo/login" method="POST">


  Enter First Name :<input type="text" name="fname"> 
  Enter Last Name  :<input type="text" name="lname"> 
  <input type="submit" value="Save">
</form>


package in.ashokit;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import in.ashokit.model.Employee;

public class LoginServlet extends HttpServlet {
  
  PreparedStatement prepareStatement = null;
  
  public LoginServlet() {
    System.out.println("First Servlet object is created");
  }

  @Override
  public void init() throws ServletException {
  
    Driver driver = new oracle.jdbc.OracleDriver();
    try {
      DriverManager.registerDriver(driver);
      String url="jdbc:oracle:thin:@localhost:1521:xe";
      String user="dinesh";
      String password="welcome";
      Connection connection = DriverManager.getConnection(url,user,password);
      prepareStatement = connection.prepareStatement("insert into user_account values(?,?)");
      
    } catch (SQLException e) {
      e.printStackTrace();
    }
    
  }
  
  public void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
    PrintWriter writer = res.getWriter();
    res.setContentType("text/html");
    String fname = req.getParameter("fname");
    String lname = req.getParameter("lname");
    
    try {
      prepareStatement.setString(1, fname);
      prepareStatement.setString(2, lname);
      if(prepareStatement.execute()) {
        writer.print("User saved Successfully");
      }
      else {
        writer.print("Record not inserted");
      }
      
    } catch (SQLException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }
    
    
  }
}



<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
  version="4.0">

  <welcome-file-list>
    <welcome-file>login.html</welcome-file>
  </welcome-file-list>

  <servlet>
    <servlet-name>ls</servlet-name>
    <servlet-class>in.ashokit.LoginServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>ls</servlet-name>
    <url-pattern>/login</url-pattern>
  </servlet-mapping>



</web-app>


static Class<?> forName(String className)
Returns the Class object associated with the class or interface with the given string name.


  @Override
  public void init() throws ServletException {
  
    
    try {
      try {
        Class.forName("oracle.jdbc.OracleDriver");
      } catch (ClassNotFoundException e) {
        e.printStackTrace();
      }
      String url="jdbc:oracle:thin:@localhost:1521:xe";
      String user="dinesh";
      String password="welcome";
      Connection connection = DriverManager.getConnection(url,user,password);
      prepareStatement = connection.prepareStatement("insert into user_account values(?,?)");
      
    } catch (SQLException e) {
      e.printStackTrace();
    }
    
  }